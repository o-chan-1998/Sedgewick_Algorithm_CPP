    cin >> n(6) >> m(10);
    for(int i = 0;i(0) < m(10);i++){
        cin >> u(2) >> v(1);
        edge[u(2)].push_back(v(2));
    for(int i = 0;i(1) < m(10);i++){
        cin >> u(1) >> v(3);
        edge[u(1)].push_back(v(1));
    for(int i = 0;i(2) < m(10);i++){
        cin >> u(1) >> v(5);
        edge[u(1)].push_back(v(1));
    for(int i = 0;i(3) < m(10);i++){
        cin >> u(2) >> v(3);
        edge[u(2)].push_back(v(2));
    for(int i = 0;i(4) < m(10);i++){
        cin >> u(2) >> v(4);
        edge[u(2)].push_back(v(2));
    for(int i = 0;i(5) < m(10);i++){
        cin >> u(6) >> v(2);
        edge[u(6)].push_back(v(6));
    for(int i = 0;i(6) < m(10);i++){
        cin >> u(3) >> v(4);
        edge[u(3)].push_back(v(3));
    for(int i = 0;i(7) < m(10);i++){
        cin >> u(3) >> v(5);
        edge[u(3)].push_back(v(3));
    for(int i = 0;i(8) < m(10);i++){
        cin >> u(5) >> v(4);
        edge[u(5)].push_back(v(5));
    for(int i = 0;i(9) < m(10);i++){
        cin >> u(6) >> v(5);
        edge[u(6)].push_back(v(6));
edge[0] 
edge[1] 3 5 
edge[2] 1 3 4 
edge[3] 4 5 
edge[4] 
edge[5] 4 
edge[6] 2 5 

    for(int v = 1;v <= n(6);v++){
-----/////-----
int dp(int v(1)){

done[] : 0 0 0 0 0 0 0 0 0 0 0 
memo[] : 0 0 0 0 0 0 0 0 0 0 0 
    if(done[v](0))return memo[v](0);
    for(int to: edge[v(1)]){
        ans = max(ans(0), dp(to(3)) + 1);
-----/////-----
int dp(int v(3)){

done[] : 0 0 0 0 0 0 0 0 0 0 0 
memo[] : 0 0 0 0 0 0 0 0 0 0 0 
    if(done[v](0))return memo[v](0);
    for(int to: edge[v(3)]){
        ans = max(ans(0), dp(to(4)) + 1);
-----/////-----
int dp(int v(4)){

done[] : 0 0 0 0 0 0 0 0 0 0 0 
memo[] : 0 0 0 0 0 0 0 0 0 0 0 
    if(done[v](0))return memo[v](0);
    for(int to: edge[v(4)]){
*****-----*****
done[] : 0 0 0 0 1 0 0 0 0 0 0 
memo[] : 0 0 0 0 0 0 0 0 0 0 0 
*****-----*****
        ans = max(ans(1), dp(to(5)) + 1);
-----/////-----
int dp(int v(5)){

done[] : 0 0 0 0 1 0 0 0 0 0 0 
memo[] : 0 0 0 0 0 0 0 0 0 0 0 
    if(done[v](0))return memo[v](0);
    for(int to: edge[v(5)]){
        ans = max(ans(0), dp(to(4)) + 1);
-----/////-----
int dp(int v(4)){

done[] : 0 0 0 0 1 0 0 0 0 0 0 
memo[] : 0 0 0 0 0 0 0 0 0 0 0 
    if(done[v](1))return memo[v](0);
*****-----*****
done[] : 0 0 0 0 1 1 0 0 0 0 0 
memo[] : 0 0 0 0 0 1 0 0 0 0 0 
*****-----*****
*****-----*****
done[] : 0 0 0 1 1 1 0 0 0 0 0 
memo[] : 0 0 0 2 0 1 0 0 0 0 0 
*****-----*****
        ans = max(ans(3), dp(to(5)) + 1);
-----/////-----
int dp(int v(5)){

done[] : 0 0 0 1 1 1 0 0 0 0 0 
memo[] : 0 0 0 2 0 1 0 0 0 0 0 
    if(done[v](1))return memo[v](1);
*****-----*****
done[] : 0 1 0 1 1 1 0 0 0 0 0 
memo[] : 0 3 0 2 0 1 0 0 0 0 0 
*****-----*****
        ans(3) = max(ans(3), dp(v(1)));
-----/////-----
int dp(int v(2)){

done[] : 0 1 0 1 1 1 0 0 0 0 0 
memo[] : 0 3 0 2 0 1 0 0 0 0 0 
    if(done[v](0))return memo[v](0);
    for(int to: edge[v(2)]){
        ans = max(ans(0), dp(to(1)) + 1);
-----/////-----
int dp(int v(1)){

done[] : 0 1 0 1 1 1 0 0 0 0 0 
memo[] : 0 3 0 2 0 1 0 0 0 0 0 
    if(done[v](1))return memo[v](3);
        ans = max(ans(4), dp(to(3)) + 1);
-----/////-----
int dp(int v(3)){

done[] : 0 1 0 1 1 1 0 0 0 0 0 
memo[] : 0 3 0 2 0 1 0 0 0 0 0 
    if(done[v](1))return memo[v](2);
        ans = max(ans(4), dp(to(4)) + 1);
-----/////-----
int dp(int v(4)){

done[] : 0 1 0 1 1 1 0 0 0 0 0 
memo[] : 0 3 0 2 0 1 0 0 0 0 0 
    if(done[v](1))return memo[v](0);
*****-----*****
done[] : 0 1 1 1 1 1 0 0 0 0 0 
memo[] : 0 3 4 2 0 1 0 0 0 0 0 
*****-----*****
        ans(4) = max(ans(4), dp(v(2)));
-----/////-----
int dp(int v(3)){

done[] : 0 1 1 1 1 1 0 0 0 0 0 
memo[] : 0 3 4 2 0 1 0 0 0 0 0 
    if(done[v](1))return memo[v](2);
        ans(4) = max(ans(4), dp(v(3)));
-----/////-----
int dp(int v(4)){

done[] : 0 1 1 1 1 1 0 0 0 0 0 
memo[] : 0 3 4 2 0 1 0 0 0 0 0 
    if(done[v](1))return memo[v](0);
        ans(4) = max(ans(4), dp(v(4)));
-----/////-----
int dp(int v(5)){

done[] : 0 1 1 1 1 1 0 0 0 0 0 
memo[] : 0 3 4 2 0 1 0 0 0 0 0 
    if(done[v](1))return memo[v](1);
        ans(4) = max(ans(4), dp(v(5)));
-----/////-----
int dp(int v(6)){

done[] : 0 1 1 1 1 1 0 0 0 0 0 
memo[] : 0 3 4 2 0 1 0 0 0 0 0 
    if(done[v](0))return memo[v](0);
    for(int to: edge[v(6)]){
        ans = max(ans(0), dp(to(2)) + 1);
-----/////-----
int dp(int v(2)){

done[] : 0 1 1 1 1 1 0 0 0 0 0 
memo[] : 0 3 4 2 0 1 0 0 0 0 0 
    if(done[v](1))return memo[v](4);
        ans = max(ans(5), dp(to(5)) + 1);
-----/////-----
int dp(int v(5)){

done[] : 0 1 1 1 1 1 0 0 0 0 0 
memo[] : 0 3 4 2 0 1 0 0 0 0 0 
    if(done[v](1))return memo[v](1);
*****-----*****
done[] : 0 1 1 1 1 1 1 0 0 0 0 
memo[] : 0 3 4 2 0 1 5 0 0 0 0 
*****-----*****
        ans(5) = max(ans(5), dp(v(6)));
===============
done[] : 0 1 1 1 1 1 1 0 0 0 0 
memo[] : 0 3 4 2 0 1 5 0 0 0 0 
===============
