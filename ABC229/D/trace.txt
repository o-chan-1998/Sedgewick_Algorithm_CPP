  cin >> s(XX...X.X.X.) >> k(2);
  int n(11) = s.size();
  rep(i,n){
    a[i](0) = s[i(0)](X)=='.';
    a[i](0) = s[i(1)](X)=='.';
    a[i](1) = s[i(2)](.)=='.';
    a[i](1) = s[i(3)](.)=='.';
    a[i](1) = s[i(4)](.)=='.';
    a[i](0) = s[i(5)](X)=='.';
    a[i](1) = s[i(6)](.)=='.';
    a[i](0) = s[i(7)](X)=='.';
    a[i](1) = s[i(8)](.)=='.';
    a[i](0) = s[i(9)](X)=='.';
    a[i](1) = s[i(10)](.)=='.';
  }
  rep(l,n(11)) {
    while (r(0) < n(11) && sum+a[r](0) <= k(2)) {
      sum(0) += a[r(0)](0);
      sum(0) += a[r(1)](0);
      sum(1) += a[r(2)](1);
      sum(2) += a[r(3)](1);
    }
    ans(4) = max(ans(4), r(4)-l(0)(4));
    while (r(4) < n(11) && sum+a[r](3) <= k(2)) {
    }
    ans(4) = max(ans(4), r(4)-l(1)(3));
    while (r(4) < n(11) && sum+a[r](3) <= k(2)) {
    }
    ans(4) = max(ans(4), r(4)-l(2)(2));
    while (r(4) < n(11) && sum+a[r](2) <= k(2)) {
      sum(2) += a[r(4)](1);
      sum(2) += a[r(5)](0);
    }
    ans(4) = max(ans(4), r(6)-l(3)(3));
    while (r(6) < n(11) && sum+a[r](2) <= k(2)) {
      sum(2) += a[r(6)](1);
      sum(2) += a[r(7)](0);
    }
    ans(4) = max(ans(4), r(8)-l(4)(4));
    while (r(8) < n(11) && sum+a[r](2) <= k(2)) {
      sum(2) += a[r(8)](1);
      sum(2) += a[r(9)](0);
    }
    ans(5) = max(ans(5), r(10)-l(5)(5));
    while (r(10) < n(11) && sum+a[r](3) <= k(2)) {
    }
    ans(5) = max(ans(5), r(10)-l(6)(4));
    while (r(10) < n(11) && sum+a[r](2) <= k(2)) {
      sum(2) += a[r(10)](1);
    }
    ans(5) = max(ans(5), r(11)-l(7)(4));
    while (r(11) < n(11) && sum+a[r](2) <= k(2)) {
    }
    ans(5) = max(ans(5), r(11)-l(8)(3));
    while (r(11) < n(11) && sum+a[r](1) <= k(2)) {
    }
    ans(5) = max(ans(5), r(11)-l(9)(2));
    while (r(11) < n(11) && sum+a[r](1) <= k(2)) {
    }
    ans(5) = max(ans(5), r(11)-l(10)(1));
  cout << ans(5) << endl;
